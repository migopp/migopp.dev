[
	{
		"id": 10,
		"name": "snack-api",
		"description": "Built a RESTful API for finding and liking others' snack preferences.",
		"technologies": "Go, PostgreSQL, Docker",
		"link": "https://github.com/migopp/snack-api"
	},
	{
		"id": 9,
		"name": "fetch-host",
		"description": "Built a tool for UTCS students to fetch command to SSH into the lowest-load lab machine.",
		"technologies": "Go",
		"link": "https://github.com/migopp/fetch-host"
	},
	{
		"id": 8,
		"name": "rgsm",
		"description": "Implemented assembler for custom ISA used for pipelined CPU. Breaks analysis into lexing, parsing, and translation stages. Features idiomatic macros for common higher-level programming paradigms.",
		"technologies": "Rust",
		"link": "https://github.com/migopp/rgsm"
	},
	{
		"id": 7,
		"name": "RISC Pipelined CPU",
		"description": "Designed and implemented a pipelined processor for a custom RISC ISA in Verilog. Fully handles instruction and memory-addressing misalignment. Utilizes optimizations such as branch prediction and data forwarding to increase efficiency.",
		"technologies": "Verilog",
		"link": ""
	},
	{
		"id": 6,
		"name": "C-Routines",
		"description": "Implemented go-style stackful coroutines.",
		"technologies": "C",
		"link": ""
	},
	{
		"id": 5,
		"name": "Custom Memory Allocator",
		"description": "Designed and implemented a custom memory allocator/deallocator based on a first-fit, linked list technique.",
		"technologies": "C",
		"link": ""
	},
	{
		"id": 4,
		"name": "Custom Language ARM Compiler",
		"description": "Designed and implemented simple compiler for custom programming language containing features such as iteration, control flow, and functions. Generates ARM-assembly instructions. Implmented optimizations such as constant folding and tail-call recursion.",
		"technologies": "C++, ARM Assembly",
		"link": ""
	},
	{
		"id": 3,
		"name": "AArch64 Emulator",
		"description": "Engineered an emulator to interpret and execute a subset of AArch64 machine-level instructions on x86 machines.",
		"technologies": "C++, ARM Assembly",
		"link": ""
	},
	{
		"id": 2,
		"name": "Web Crawler and Search Engine",
		"description": "Indexes webs of size 100k+ and performs efficient queries with full logical operator support. Idexes user's tokenized queries to provide trend visualization and generative search suggestions. Implemented Python web-generation script to create large, controllable webs for testing.",
		"technologies": "Java, JavaScript, HTML, CSS, Python",
		"link": ""
	},
	{
		"id": 1,
		"name": "Tetris Genetic Algorithm",
		"description": "Designed and implemented Tetris engine and genetic algorithm. Survives 500,000 tetrominoes consistently after 50 generations of training.",
		"technologies": "Java",
		"link": ""
	}
]
